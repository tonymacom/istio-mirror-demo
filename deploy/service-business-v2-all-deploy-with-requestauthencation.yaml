# service-business-v2 authentication with jwt
# use following command
# export GATEWAY_URL=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
# curl ${GATEWAY_URL}/service-business/request/info -H "Authorization: Bearer invalidToken" -D -
# TOKEN=$(curl https://raw.githubusercontent.com/istio/istio/release-1.5/security/tools/jwt/samples/demo.jwt -s) && echo $TOKEN | cut -d '.' -f2 - | base64 --decode -
# curl ${GATEWAY_URL}/service-business/request/info -H "Authorization: Bearer $TOKEN" -D -

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-business-v2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-business
      version: v2
  template:
    metadata:
      labels:
        app: service-business
        version: v2
    spec:
      containers:
      - name: service-business
        image: itmabo/service-business:v2
        imagePullPolicy: Always
        ports:
        - name: main-port
          containerPort: 8080
        volumeMounts:
        - mountPath: /home/log
          name: log-volume
        livenessProbe:
          httpGet:
            path: /service-business/actuator/info
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /service-business/actuator/info
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          failureThreshold: 5
      volumes:
      - name: log-volume
        hostPath:
          path: /home/log
          type: DirectoryOrCreate        
---
apiVersion: v1
kind: Service
metadata:
  name: service-business
  namespace: default
  labels:
    app: service-business
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: main-port
  selector:
    app: service-business 
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: service-shadow
spec:
  hosts:
  - '*'
  gateways:
  - istio-system/ingressgateway
  http:
  - route:
    - destination:
        host: service-business     
---
apiVersion: "security.istio.io/v1beta1"
kind: "RequestAuthentication"
metadata:
  name: "jwt-business"
spec:
  selector:
    matchLabels:
      app: service-business
  jwtRules:
  - issuer: "testing@secure.istio.io"
    jwksUri: "https://raw.githubusercontent.com/istio/istio/release-1.5/security/tools/jwt/samples/jwks.json"
